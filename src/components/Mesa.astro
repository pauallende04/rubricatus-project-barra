---
// Componente Button.astro
interface Props {
  title: string;
  color: string;
}

const { title, color } = Astro.props;

// Mapeo de colores a clases de Tailwind
const colorClasses = {
  red: 'bg-red-700',
  yellow: 'bg-yellow-500',
  blue: 'bg-blue-700',
  green: 'bg-green-600'
};

// Clases base para el botón
const baseButtonClasses = `link-card flex-row justify-center text-white focus:outline-none font-medium rounded-lg px-5 py-2.5 text-center inline-flex items-center dark:focus:ring-blue-500/55 mb-2 hover:shadow-lg transition-all duration-200 ease-in-out hover:scale-100 scale-95 gap-x-2 opacity-90 hover:opacity-100`;

// Clases dinámicas
const dynamicClasses = `${colorClasses[color] || ''} ''}`;
---

<button class={`${baseButtonClasses} ${dynamicClasses} link-card`}>
	<span class={`centered`} >
		<h2>
			{title}
		</h2>
	</span>
</button>

<style>
.link-card {
	list-style: none;
	display: flex;
	padding: 1px;
	background-image: none;
	background-size: 400%;
	border-radius: 7px;
	background-position: 100%;
	transition: background-position 0.6s cubic-bezier(0.22, 1, 0.36, 1);
}

.link-card > span {
	width: 100%;
	text-decoration: none;
	line-height: 1.4;
	padding: calc(1.5rem - 1px);
	border-radius: 8px;
	color: white;
	opacity: 0.8;
	display: flex;
	justify-content: center;
	align-items: center;
}

h2 {
	margin: 0;
	font-size: 1.25rem;
	transition: color 0.6s cubic-bezier(0.22, 1, 0.36, 1);
}
</style>
